/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import vrp.problem.EuclideanCoordinate;
import buildingmodel.Node;
import buildingmodel.Storey;

/**
 *
 * @author gokalp
 */
public class StoreyPanel extends javax.swing.JPanel {

    private int mousePosX = -1;
    private int mousePosY = -1;
    private Storey storey = new Storey();
    private EuclideanCoordinate candidateConnectionNodeCoordinates = null;

    /**
     * Creates new form StoreyPanel
     */
    public StoreyPanel() {
        initComponents();
    }

    public void setMousePosX(int mousePosX) {
        this.mousePosX = mousePosX;
    }

    public void setMousePosY(int mousePosY) {
        this.mousePosY = mousePosY;
    }

    public void setStorey(Storey storey) {
        this.storey = storey;
        repaint();
    }

    public Storey getStorey() {
        return storey;
    }

    public EuclideanCoordinate getCandidateConnectionNodeCoordinates() {
        return candidateConnectionNodeCoordinates;
    }

    public void setCandidateConnectionNodeCoordinates(EuclideanCoordinate candidateConnectionNodeCoordinates) {
        this.candidateConnectionNodeCoordinates = candidateConnectionNodeCoordinates;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
        Graphics2D g2d = (Graphics2D) g;

        double multiplier = (double) MainWindow.storeyWidth / (double) StoreyPanel.this.getWidth();

        if (mousePosX != -1 && mousePosY != -1) {
            g2d.setColor(Color.BLACK);
            String posX = String.valueOf((multiplier * ((double) mousePosX)));
            String posY = String.valueOf((multiplier * ((double) mousePosY)));
            g2d.drawString((posX + "," + posY), mousePosX, mousePosY);
        }

        Font defaultFont = g2d.getFont();
        g2d.setFont(new Font("Big Font", Font.BOLD, 200));
        g2d.setColor(new Color(0, 0, 0, 25));
        g2d.drawString(String.valueOf(storey.getNo()), getWidth() / 2 - 50, getHeight() / 2 + 50);

        g2d.setFont(defaultFont);
        for (Node node : storey.getNodes()) {
            EuclideanCoordinate coords = node.getEuclideanCoordinate();

            int x = (int) (coords.getX() / multiplier);
            int y = (int) (coords.getY() / multiplier);

            if(node.isDepot()) {
                g2d.setColor(Color.GREEN);
            } else {
                g2d.setColor(Color.BLUE);
            }
            g2d.fillOval(x - 4, y - 4, 8, 8);
            g2d.setColor(Color.BLACK);
            g2d.drawString(String.valueOf(node.getID()), x + 3, y + 3);
        }

        for (Node node : storey.getConnectionNodes()) {
            EuclideanCoordinate coords = node.getEuclideanCoordinate();

            int x = (int) (coords.getX() / multiplier);
            int y = (int) (coords.getY() / multiplier);

            g2d.setColor(Color.RED);
            g2d.fill3DRect(x - 6, y - 6, 12, 12, true);
            g2d.setColor(Color.BLACK);
            g2d.drawString(String.valueOf(node.getID()), x + 6, y + 6);
        }

        if (candidateConnectionNodeCoordinates != null) {
            int x = (int) (candidateConnectionNodeCoordinates.getX() / multiplier);
            int y = (int) (candidateConnectionNodeCoordinates.getY() / multiplier);
            g2d.setColor(Color.ORANGE);
            g2d.fill3DRect(x - 6, y - 6, 12, 12, true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
